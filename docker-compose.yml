version: '3.9'
services:
  artemis:
    image: local/artemis
    container_name: artemis
    ports:
      - 61616:61616
      - 5672:5672
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 400M
    environment:
      - ARTEMIS_USER=user
      - ARTEMIS_PASSWORD=pass
      - ANONYMOUS_LOGIN=true

  activemq:
    image: local/activemq
    container_name: activemq
    build: 
      context: ./docker/activemq/
    ports:
      - 61617:61616
      - 5673:5672
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 400M
    environment:
      - ACTIVEMQ_ADMIN_LOGIN=user
      - ACTIVEMQ_ADMIN_PASSWORD=pass
    #   - ANONYMOUS_LOGIN=true

  rabbitmq:
    image: rabbitmq:3.9.13-management-alpine
    container_name: rabbitmq
    ports:
      - 5674:5672
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 400M

  nginx:
    image: nginx:1.21
    container_name: nginx
    volumes:
      - ./docker/nginx:/etc/nginx/conf.d
    ports:
      - 80:80
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 20M
    depends_on:
      - server
      - kafka-ui

  redis:
    container_name: redis
    image: redis:6-alpine
    command: redis-server --requirepass Redis2022!
    ports:
      - 6379:6379
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 100M

  server:
    container_name: server
    image: node-filas
    build:
      context: ./backend/.
    command: npm run server
    volumes:
      - ./backend/:/usr/app/
    env_file:
      - ./backend/.env
    environment:
      - rabbit_host=rabbitmq
      - active_host=activemq
      - artemis_host=artemis
    ports:
      - 3333:3333
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 150M
    depends_on:
      - redis
      - artemis
      - activemq
      - rabbitmq
      - kafka

  consumer:
    container_name: consumer
    image: node-filas
    build:
      context: ./backend/.
    command: npm run consumer
    volumes:
      - ./backend/:/usr/app/
    env_file:
      - ./backend/.env
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 150M
    depends_on:
      - server
      - redis
      - artemis
      - activemq
      - rabbitmq
      - kafka
    
  frontend:
    build: 
      context: ./frontend/.
    ports:
      - 3000:3000

  zookeeper:
    container_name: zookeeper
    image: bitnami/zookeeper:3
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 250M

  kafka:
    container_name: kafka
    image: bitnami/kafka:2.5.0
    ports:
      - 9092:9092
      - 9093:9093
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - ALLOW_ANONYMOUS_LOGIN=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true      
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 500M
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - zookeeper
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 350M